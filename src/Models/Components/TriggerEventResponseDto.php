<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace novu\Models\Components;


class TriggerEventResponseDto
{
    /**
     * Indicates whether the trigger was acknowledged or not
     *
     * @var bool $acknowledged
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('acknowledged')]
    public bool $acknowledged;

    /**
     * Status of the trigger
     *
     * @var Status $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\Status')]
    public Status $status;

    /**
     * In case of an error, this field will contain the error message(s)
     *
     * @var ?array<string> $error
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('error')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $error = null;

    /**
     * The returned transaction ID of the trigger
     *
     * @var ?string $transactionId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transactionId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $transactionId = null;

    /**
     * @param  bool  $acknowledged
     * @param  Status  $status
     * @param  ?array<string>  $error
     * @param  ?string  $transactionId
     */
    public function __construct(bool $acknowledged, Status $status, ?array $error = null, ?string $transactionId = null)
    {
        $this->acknowledged = $acknowledged;
        $this->status = $status;
        $this->error = $error;
        $this->transactionId = $transactionId;
    }
}