<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace novu\Models\Components;


class SubscriptionDto
{
    /**
     * The unique identifier of the subscription
     *
     * @var string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_id')]
    public string $id;

    /**
     * The topic information
     *
     * @var TopicDto $topic
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('topic')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\TopicDto')]
    public TopicDto $topic;

    /**
     * The creation date of the subscription
     *
     * @var string $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdAt')]
    public string $createdAt;

    /**
     * The last update date of the subscription
     *
     * @var string $updatedAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('updatedAt')]
    public string $updatedAt;

    /**
     * The subscriber information
     *
     * @var ?Subscriber $subscriber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscriber')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\Subscriber|null')]
    public ?Subscriber $subscriber;

    /**
     * @param  string  $id
     * @param  TopicDto  $topic
     * @param  string  $createdAt
     * @param  string  $updatedAt
     * @param  ?Subscriber  $subscriber
     * @phpstan-pure
     */
    public function __construct(string $id, TopicDto $topic, string $createdAt, string $updatedAt, ?Subscriber $subscriber = null)
    {
        $this->id = $id;
        $this->topic = $topic;
        $this->createdAt = $createdAt;
        $this->updatedAt = $updatedAt;
        $this->subscriber = $subscriber;
    }
}