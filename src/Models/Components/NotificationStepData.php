<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace novu\Models\Components;


class NotificationStepData
{
    /**
     * Unique identifier for the notification step.
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Universally unique identifier for the notification step.
     *
     * @var ?string $uuid
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('uuid')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $uuid = null;

    /**
     * Name of the notification step.
     *
     * @var ?string $name
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('name')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $name = null;

    /**
     * ID of the template associated with this notification step.
     *
     * @var ?string $templateId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_templateId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $templateId = null;

    /**
     * Indicates whether the notification step is active.
     *
     * @var ?bool $active
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('active')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $active = null;

    /**
     * Determines if the process should stop on failure.
     *
     * @var ?bool $shouldStopOnFail
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('shouldStopOnFail')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?bool $shouldStopOnFail = null;

    /**
     * Message template used in this notification step.
     *
     * @var ?MessageTemplate $template
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('template')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\MessageTemplate|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?MessageTemplate $template = null;

    /**
     * Filters applied to this notification step.
     *
     * @var ?array<StepFilterDto> $filters
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('filters')]
    #[\Speakeasy\Serializer\Annotation\Type('array<\novu\Models\Components\StepFilterDto>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $filters = null;

    /**
     * ID of the parent notification step, if applicable.
     *
     * @var ?string $parentId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_parentId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $parentId = null;

    /**
     * Metadata associated with the workflow step. Can vary based on the type of step.
     *
     * @var DigestRegularMetadata|DigestTimedMetadata|DelayRegularMetadata|DelayScheduledMetadata|null $metadata
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('metadata')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\DigestRegularMetadata|\novu\Models\Components\DigestTimedMetadata|\novu\Models\Components\DelayRegularMetadata|\novu\Models\Components\DelayScheduledMetadata')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public DigestRegularMetadata|DigestTimedMetadata|DelayRegularMetadata|DelayScheduledMetadata|null $metadata = null;

    /**
     * Callback information for replies, including whether it is active and the callback URL.
     *
     * @var ?ReplyCallback $replyCallback
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('replyCallback')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\ReplyCallback|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?ReplyCallback $replyCallback = null;

    /**
     * @param  ?string  $id
     * @param  ?string  $uuid
     * @param  ?string  $name
     * @param  ?string  $templateId
     * @param  ?bool  $active
     * @param  ?bool  $shouldStopOnFail
     * @param  ?MessageTemplate  $template
     * @param  ?array<StepFilterDto>  $filters
     * @param  ?string  $parentId
     * @param  DigestRegularMetadata|DigestTimedMetadata|DelayRegularMetadata|DelayScheduledMetadata|null  $metadata
     * @param  ?ReplyCallback  $replyCallback
     */
    public function __construct(?string $id = null, ?string $uuid = null, ?string $name = null, ?string $templateId = null, ?bool $active = null, ?bool $shouldStopOnFail = null, ?MessageTemplate $template = null, ?array $filters = null, ?string $parentId = null, DigestRegularMetadata|DigestTimedMetadata|DelayRegularMetadata|DelayScheduledMetadata|null $metadata = null, ?ReplyCallback $replyCallback = null)
    {
        $this->id = $id;
        $this->uuid = $uuid;
        $this->name = $name;
        $this->templateId = $templateId;
        $this->active = $active;
        $this->shouldStopOnFail = $shouldStopOnFail;
        $this->template = $template;
        $this->filters = $filters;
        $this->parentId = $parentId;
        $this->metadata = $metadata;
        $this->replyCallback = $replyCallback;
    }
}