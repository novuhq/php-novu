<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace novu\Models\Components;


class MessageResponseDto
{
    /**
     * Template ID associated with the message
     *
     * @var string $templateId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_templateId')]
    public string $templateId;

    /**
     * Environment ID where the message is sent
     *
     * @var string $environmentId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_environmentId')]
    public string $environmentId;

    /**
     * Message template ID
     *
     * @var string $messageTemplateId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_messageTemplateId')]
    public string $messageTemplateId;

    /**
     * Organization ID associated with the message
     *
     * @var string $organizationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_organizationId')]
    public string $organizationId;

    /**
     * Notification ID associated with the message
     *
     * @var string $notificationId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_notificationId')]
    public string $notificationId;

    /**
     * Subscriber ID associated with the message
     *
     * @var string $subscriberId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_subscriberId')]
    public string $subscriberId;

    /**
     * Creation date of the message
     *
     * @var string $createdAt
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('createdAt')]
    public string $createdAt;

    /**
     * Content of the message, can be an email block or a string
     *
     * @var EmailBlock|string $content
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('content')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\EmailBlock|string')]
    public EmailBlock|string $content;

    /**
     * Transaction ID associated with the message
     *
     * @var string $transactionId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('transactionId')]
    public string $transactionId;

    /**
     * Channel type through which the message is sent
     *
     * @var ChannelTypeEnum $channel
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('channel')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\ChannelTypeEnum')]
    public ChannelTypeEnum $channel;

    /**
     * Indicates if the message has been read
     *
     * @var bool $read
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('read')]
    public bool $read;

    /**
     * Indicates if the message has been seen
     *
     * @var bool $seen
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('seen')]
    public bool $seen;

    /**
     * Call to action associated with the message
     *
     * @var MessageCTA $cta
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cta')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\MessageCTA')]
    public MessageCTA $cta;

    /**
     * Status of the message
     *
     * @var MessageStatusEnum $status
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('status')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\MessageStatusEnum')]
    public MessageStatusEnum $status;

    /**
     * Unique identifier for the message
     *
     * @var ?string $id
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_id')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $id = null;

    /**
     * Subscriber details, if available
     *
     * @var ?SubscriberResponseDto $subscriber
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subscriber')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\SubscriberResponseDto|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?SubscriberResponseDto $subscriber = null;

    /**
     * Workflow template associated with the message
     *
     * @var ?WorkflowResponse $template
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('template')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\WorkflowResponse|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?WorkflowResponse $template = null;

    /**
     * Identifier for the message template
     *
     * @var ?string $templateIdentifier
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('templateIdentifier')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $templateIdentifier = null;

    /**
     * Last seen date of the message, if available
     *
     * @var ?string $lastSeenDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lastSeenDate')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $lastSeenDate = null;

    /**
     * Last read date of the message, if available
     *
     * @var ?string $lastReadDate
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lastReadDate')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $lastReadDate = null;

    /**
     * Subject of the message, if applicable
     *
     * @var ?string $subject
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('subject')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $subject = null;

    /**
     * Email address associated with the message, if applicable
     *
     * @var ?string $email
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('email')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $email = null;

    /**
     * Phone number associated with the message, if applicable
     *
     * @var ?string $phone
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('phone')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $phone = null;

    /**
     * Direct webhook URL for the message, if applicable
     *
     * @var ?string $directWebhookUrl
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('directWebhookUrl')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $directWebhookUrl = null;

    /**
     * Provider ID associated with the message, if applicable
     *
     * @var ?string $providerId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('providerId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $providerId = null;

    /**
     * Device tokens associated with the message, if applicable
     *
     * @var ?array<string> $deviceTokens
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('deviceTokens')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $deviceTokens = null;

    /**
     * Title of the message, if applicable
     *
     * @var ?string $title
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('title')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $title = null;

    /**
     * Error ID if the message has an error
     *
     * @var ?string $errorId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('errorId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $errorId = null;

    /**
     * Error text if the message has an error
     *
     * @var ?string $errorText
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('errorText')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $errorText = null;

    /**
     * The payload that was used to send the notification trigger
     *
     * @var ?MessageResponseDtoPayload $payload
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('payload')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\MessageResponseDtoPayload|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?MessageResponseDtoPayload $payload = null;

    /**
     * Provider specific overrides used when triggering the notification
     *
     * @var ?MessageResponseDtoOverrides $overrides
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('overrides')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\MessageResponseDtoOverrides|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?MessageResponseDtoOverrides $overrides = null;

    /**
     * Feed ID associated with the message, if applicable
     *
     * @var ?string $feedId
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('_feedId')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $feedId = null;

    /**
     * @param  string  $templateId
     * @param  string  $environmentId
     * @param  string  $messageTemplateId
     * @param  string  $organizationId
     * @param  string  $notificationId
     * @param  string  $subscriberId
     * @param  string  $createdAt
     * @param  EmailBlock|string  $content
     * @param  string  $transactionId
     * @param  ChannelTypeEnum  $channel
     * @param  bool  $read
     * @param  bool  $seen
     * @param  MessageCTA  $cta
     * @param  MessageStatusEnum  $status
     * @param  ?string  $id
     * @param  ?SubscriberResponseDto  $subscriber
     * @param  ?WorkflowResponse  $template
     * @param  ?string  $templateIdentifier
     * @param  ?string  $lastSeenDate
     * @param  ?string  $lastReadDate
     * @param  ?string  $subject
     * @param  ?string  $email
     * @param  ?string  $phone
     * @param  ?string  $directWebhookUrl
     * @param  ?string  $providerId
     * @param  ?array<string>  $deviceTokens
     * @param  ?string  $title
     * @param  ?string  $errorId
     * @param  ?string  $errorText
     * @param  ?MessageResponseDtoPayload  $payload
     * @param  ?MessageResponseDtoOverrides  $overrides
     * @param  ?string  $feedId
     */
    public function __construct(string $templateId, string $environmentId, string $messageTemplateId, string $organizationId, string $notificationId, string $subscriberId, string $createdAt, EmailBlock|string $content, string $transactionId, ChannelTypeEnum $channel, bool $read, bool $seen, MessageCTA $cta, MessageStatusEnum $status, ?string $id = null, ?SubscriberResponseDto $subscriber = null, ?WorkflowResponse $template = null, ?string $templateIdentifier = null, ?string $lastSeenDate = null, ?string $lastReadDate = null, ?string $subject = null, ?string $email = null, ?string $phone = null, ?string $directWebhookUrl = null, ?string $providerId = null, ?array $deviceTokens = null, ?string $title = null, ?string $errorId = null, ?string $errorText = null, ?MessageResponseDtoPayload $payload = null, ?MessageResponseDtoOverrides $overrides = null, ?string $feedId = null)
    {
        $this->templateId = $templateId;
        $this->environmentId = $environmentId;
        $this->messageTemplateId = $messageTemplateId;
        $this->organizationId = $organizationId;
        $this->notificationId = $notificationId;
        $this->subscriberId = $subscriberId;
        $this->createdAt = $createdAt;
        $this->content = $content;
        $this->transactionId = $transactionId;
        $this->channel = $channel;
        $this->read = $read;
        $this->seen = $seen;
        $this->cta = $cta;
        $this->status = $status;
        $this->id = $id;
        $this->subscriber = $subscriber;
        $this->template = $template;
        $this->templateIdentifier = $templateIdentifier;
        $this->lastSeenDate = $lastSeenDate;
        $this->lastReadDate = $lastReadDate;
        $this->subject = $subject;
        $this->email = $email;
        $this->phone = $phone;
        $this->directWebhookUrl = $directWebhookUrl;
        $this->providerId = $providerId;
        $this->deviceTokens = $deviceTokens;
        $this->title = $title;
        $this->errorId = $errorId;
        $this->errorText = $errorText;
        $this->payload = $payload;
        $this->overrides = $overrides;
        $this->feedId = $feedId;
    }
}