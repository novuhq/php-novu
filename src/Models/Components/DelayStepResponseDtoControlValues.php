<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace novu\Models\Components;


/** DelayStepResponseDtoControlValues - Control values for the delay step */
class DelayStepResponseDtoControlValues
{
    /**
     * Amount of time to delay.
     *
     * @var float $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    public float $amount;

    /**
     * Unit of time for the delay amount.
     *
     * @var DelayStepResponseDtoUnit $unit
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unit')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\DelayStepResponseDtoUnit')]
    public DelayStepResponseDtoUnit $unit;

    /**
     * JSONLogic filter conditions for conditionally skipping the step execution. Supports complex logical operations with AND, OR, and comparison operators. See https://jsonlogic.com/ for full typing reference.
     *
     * @var ?array<string, mixed> $skip
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('skip')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $skip = null;

    /**
     * $additionalProperties
     *
     * @var ?array<string, mixed> $additionalProperties
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('additionalProperties')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $additionalProperties = null;

    /**
     * Type of the delay. Currently only 'regular' is supported by the schema.
     *
     * @var ?DelayStepResponseDtoType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\DelayStepResponseDtoType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?DelayStepResponseDtoType $type = null;

    /**
     * @param  float  $amount
     * @param  DelayStepResponseDtoUnit  $unit
     * @param  ?array<string, mixed>  $skip
     * @param  ?DelayStepResponseDtoType  $type
     * @param  ?array<string, mixed>  $additionalProperties
     * @phpstan-pure
     */
    public function __construct(float $amount, DelayStepResponseDtoUnit $unit, ?array $skip = null, ?array $additionalProperties = null, ?DelayStepResponseDtoType $type = DelayStepResponseDtoType::Regular)
    {
        $this->amount = $amount;
        $this->unit = $unit;
        $this->skip = $skip;
        $this->additionalProperties = $additionalProperties;
        $this->type = $type;
    }
}