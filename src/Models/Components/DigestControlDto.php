<?php

/**
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

declare(strict_types=1);

namespace novu\Models\Components;


class DigestControlDto
{
    /**
     * JSONLogic filter conditions for conditionally skipping the step execution. Supports complex logical operations with AND, OR, and comparison operators. See https://jsonlogic.com/ for full typing reference.
     *
     * @var ?array<string, mixed> $skip
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('skip')]
    #[\Speakeasy\Serializer\Annotation\Type('array<string, mixed>|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?array $skip = null;

    /**
     * The type of digest strategy. Determines which fields are applicable.
     *
     * @var ?DigestControlDtoType $type
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('type')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\DigestControlDtoType|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?DigestControlDtoType $type = null;

    /**
     * The amount of time for the digest interval (for REGULAR type). Min 1.
     *
     * @var ?float $amount
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('amount')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?float $amount = null;

    /**
     * The unit of time for the digest interval (for REGULAR type).
     *
     * @var ?DigestControlDtoUnit $unit
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('unit')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\DigestControlDtoUnit|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?DigestControlDtoUnit $unit = null;

    /**
     * Configuration for look-back window (for REGULAR type).
     *
     * @var ?LookBackWindowDto $lookBackWindow
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('lookBackWindow')]
    #[\Speakeasy\Serializer\Annotation\Type('\novu\Models\Components\LookBackWindowDto|null')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?LookBackWindowDto $lookBackWindow = null;

    /**
     * Cron expression for TIMED digest. Min length 1.
     *
     * @var ?string $cron
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('cron')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $cron = null;

    /**
     * Specify a custom key for digesting events instead of the default event key.
     *
     * @var ?string $digestKey
     */
    #[\Speakeasy\Serializer\Annotation\SerializedName('digestKey')]
    #[\Speakeasy\Serializer\Annotation\SkipWhenNull]
    public ?string $digestKey = null;

    /**
     * @param  ?array<string, mixed>  $skip
     * @param  ?DigestControlDtoType  $type
     * @param  ?float  $amount
     * @param  ?DigestControlDtoUnit  $unit
     * @param  ?LookBackWindowDto  $lookBackWindow
     * @param  ?string  $cron
     * @param  ?string  $digestKey
     * @phpstan-pure
     */
    public function __construct(?array $skip = null, ?DigestControlDtoType $type = null, ?float $amount = null, ?DigestControlDtoUnit $unit = null, ?LookBackWindowDto $lookBackWindow = null, ?string $cron = null, ?string $digestKey = null)
    {
        $this->skip = $skip;
        $this->type = $type;
        $this->amount = $amount;
        $this->unit = $unit;
        $this->lookBackWindow = $lookBackWindow;
        $this->cron = $cron;
        $this->digestKey = $digestKey;
    }
}